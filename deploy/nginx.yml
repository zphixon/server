# code: language=ansible
- name: Deploy nginx
  hosts: grape_surgery
  become: true

  roles:
    - server

  vars_files:
    - ../configs/vars.yml

  tasks:

    - name: Install nginx
      ansible.builtin.package:
        name: nginx
        state: present
      notify: Disable default nginx service

    - name: "Ensure nginx.dir exists: {{ nginx.dir }}"
      ansible.builtin.file:
        path: "{{ nginx.dir }}"
        state: directory
        owner: "{{ nginx.user }}"
        mode: u=rwx,go=

    - name: Template nginx.service
      ansible.builtin.template:
        mode: ugo=r
        src: ../configs/nginx.service.j2
        dest: "{{ systemd_unit_dir }}/{{ nginx.custom_service }}.service"
      notify: Reload systemd

    - name: Template nginx.conf
      ansible.builtin.template:
        owner: "{{ nginx.user }}"
        mode: u=r,go=
        src: ../configs/nginx.conf.j2
        dest: "{{ nginx.dir }}/nginx.conf"

    - name: Template sites.conf
      ansible.builtin.template:
        owner: "{{ nginx.user }}"
        mode: ug=rw,o=r
        src: ../configs/sites.conf.j2
        dest: "{{ nginx.dir }}/sites.conf"

    - name: Template domain confs
      ansible.builtin.template:
        owner: "{{ nginx.user }}"
        mode: ug=rw,o=r
        src: "../configs/{{ item.name }}.conf.j2"
        dest: "{{ nginx.dir }}/{{ item.name }}.conf"
      with_items: "{{ nginx.domains }}"
      when: "'include' in item"

    - name: Reinstall certificates
      ansible.builtin.command:
        certbot --reinstall --nginx --nginx-server-root {{ nginx.dir }} --cert-name allOfEm
      changed_when: true

    - name: Turn on IPv4
      ansible.builtin.replace:
        path: "{{ nginx.dir }}/sites.conf"
        regexp: ipv6only=on
        replace: ipv6only=off

    - name: Turn on HTTP/2 (https://github.com/certbot/certbot/issues/3646)
      ansible.builtin.replace:
        path: "{{ nginx.dir }}/sites.conf"
        regexp: "( ssl[; ])"
        replace: " http2 \\1"

    - name: Stop nginx (https://github.com/certbot/certbot/issues/5486)
      ansible.builtin.command:
        pkill nginx
      changed_when: true
      notify: Reload nginx

  handlers:

    - name: Disable default nginx service
      ansible.builtin.systemd:
        daemon_reload: true
        name: nginx
        state: stopped
        enabled: false

    - name: Reload nginx
      ansible.builtin.service:
        name: "{{ nginx.custom_service }}"
        state: restarted
        enabled: true
